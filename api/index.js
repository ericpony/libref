Index.PACKAGES = {"leon.monads.state" : [{"object" : "leon\/monads\/state\/MonadStateLaws$.html", "name" : "leon.monads.state.MonadStateLaws"}, {"object" : "leon\/monads\/state\/State$.html", "case class" : "leon\/monads\/state\/State.html", "name" : "leon.monads.state.State"}], "leon.lang.synthesis" : [{"case class" : "leon\/lang\/synthesis\/Leaf.html", "name" : "leon.lang.synthesis.Leaf"}, {"case class" : "leon\/lang\/synthesis\/Node.html", "name" : "leon.lang.synthesis.Node"}, {"class" : "leon\/lang\/synthesis\/Oracle.html", "name" : "leon.lang.synthesis.Oracle"}], "leon" : [], "leon.lang" : [{"object" : "leon\/lang\/package$$BigInt$.html", "name" : "leon.lang.BigInt"}, {"class" : "leon\/lang\/package$$BooleanDecorations.html", "name" : "leon.lang.BooleanDecorations"}, {"case class" : "leon\/lang\/Dummy.html", "name" : "leon.lang.Dummy"}, {"class" : "leon\/lang\/Either.html", "name" : "leon.lang.Either"}, {"object" : "leon\/lang\/package$$InvariantFunction$.html", "name" : "leon.lang.InvariantFunction"}, {"case class" : "leon\/lang\/Left.html", "name" : "leon.lang.Left"}, {"case class" : "leon\/lang\/Map.html", "object" : "leon\/lang\/Map$.html", "name" : "leon.lang.Map"}, {"case class" : "leon\/lang\/None.html", "name" : "leon.lang.None"}, {"class" : "leon\/lang\/Option.html", "name" : "leon.lang.Option"}, {"class" : "leon\/lang\/package$$Passes.html", "name" : "leon.lang.Passes"}, {"object" : "leon\/lang\/Rational$.html", "case class" : "leon\/lang\/Rational.html", "name" : "leon.lang.Rational"}, {"object" : "leon\/lang\/Real$.html", "class" : "leon\/lang\/Real.html", "name" : "leon.lang.Real"}, {"case class" : "leon\/lang\/Right.html", "name" : "leon.lang.Right"}, {"case class" : "leon\/lang\/Set.html", "object" : "leon\/lang\/Set$.html", "name" : "leon.lang.Set"}, {"case class" : "leon\/lang\/Some.html", "name" : "leon.lang.Some"}, {"class" : "leon\/lang\/package$$SpecsDecorations.html", "name" : "leon.lang.SpecsDecorations"}, {"object" : "leon\/lang\/StrOps$.html", "name" : "leon.lang.StrOps"}], "leon.annotation" : [{"class" : "leon\/annotation\/package$$compose.html", "name" : "leon.annotation.compose"}, {"class" : "leon\/annotation\/package$$extern.html", "name" : "leon.annotation.extern"}, {"class" : "leon\/annotation\/package$$ignore.html", "name" : "leon.annotation.ignore"}, {"class" : "leon\/annotation\/package$$induct.html", "name" : "leon.annotation.induct"}, {"class" : "leon\/annotation\/package$$inline.html", "name" : "leon.annotation.inline"}, {"class" : "leon\/annotation\/package$$internal.html", "name" : "leon.annotation.internal"}, {"object" : "leon\/annotation\/isabelle$.html", "name" : "leon.annotation.isabelle"}, {"class" : "leon\/annotation\/package$$library.html", "name" : "leon.annotation.library"}, {"class" : "leon\/annotation\/package$$monotonic.html", "name" : "leon.annotation.monotonic"}], "leon.proof" : [{"object" : "leon\/proof\/Internal$.html", "name" : "leon.proof.Internal"}, {"case class" : "leon\/proof\/package$$ProofOps.html", "name" : "leon.proof.ProofOps"}, {"case class" : "leon\/proof\/package$$RelReasoning.html", "name" : "leon.proof.RelReasoning"}], "leon.collection" : [{"object" : "leon\/collection\/$colon$colon$.html", "name" : "leon.collection.::"}, {"case class" : "leon\/collection\/Cons.html", "name" : "leon.collection.Cons"}, {"object" : "leon\/collection\/List$.html", "class" : "leon\/collection\/List.html", "name" : "leon.collection.List"}, {"object" : "leon\/collection\/ListOps$.html", "name" : "leon.collection.ListOps"}, {"object" : "leon\/collection\/ListSpecs$.html", "name" : "leon.collection.ListSpecs"}, {"case class" : "leon\/collection\/Nil.html", "name" : "leon.collection.Nil"}], "libref" : [], "libref.collection.PairList" : [{"case class" : "libref\/collection\/PairList\/package$$Pair.html", "name" : "libref.collection.PairList.Pair"}, {"case class" : "libref\/collection\/PairList\/package$$PCons.html", "name" : "libref.collection.PairList.PCons"}, {"class" : "libref\/collection\/PairList\/package$$PList.html", "name" : "libref.collection.PairList.PList"}, {"case class" : "libref\/collection\/PairList\/package$$PNil.html", "name" : "libref.collection.PairList.PNil"}], "libref.spec" : [{"object" : "libref\/spec\/AHeap$.html", "name" : "libref.spec.AHeap"}, {"case class" : "libref\/spec\/ArrayHeap.html", "name" : "libref.spec.ArrayHeap"}, {"object" : "libref\/spec\/ArrayHeapListHeapBisim$.html", "name" : "libref.spec.ArrayHeapListHeapBisim"}, {"case class" : "libref\/spec\/ArrayList.html", "name" : "libref.spec.ArrayList"}, {"object" : "libref\/spec\/ArrayListLemmas$.html", "name" : "libref.spec.ArrayListLemmas"}, {"object" : "libref\/spec\/ArrayQueue$.html", "case class" : "libref\/spec\/ArrayQueue.html", "name" : "libref.spec.ArrayQueue"}, {"object" : "libref\/spec\/ArrayQueueLemmas$.html", "name" : "libref.spec.ArrayQueueLemmas"}, {"case class" : "libref\/spec\/ArrayStack.html", "name" : "libref.spec.ArrayStack"}, {"object" : "libref\/spec\/AVLTree$.html", "name" : "libref.spec.AVLTree"}, {"object" : "libref\/spec\/BigIntArrayHeap$.html", "name" : "libref.spec.BigIntArrayHeap"}, {"object" : "libref\/spec\/BoundedArray$.html", "case class" : "libref\/spec\/BoundedArray.html", "name" : "libref.spec.BoundedArray"}, {"object" : "libref\/spec\/BoundedArrayLemmas$.html", "name" : "libref.spec.BoundedArrayLemmas"}, {"class" : "libref\/spec\/Collection.html", "name" : "libref.spec.Collection"}, {"case class" : "libref\/spec\/CollectionImpl.html", "name" : "libref.spec.CollectionImpl"}, {"object" : "libref\/spec\/DistinctSortedListLemmas$.html", "name" : "libref.spec.DistinctSortedListLemmas"}, {"object" : "libref\/spec\/DistinctSortedListOps$.html", "name" : "libref.spec.DistinctSortedListOps"}, {"object" : "libref\/spec\/DistinctSortedListSpec$.html", "name" : "libref.spec.DistinctSortedListSpec"}, {"case class" : "libref\/spec\/EmptyArray.html", "name" : "libref.spec.EmptyArray"}, {"object" : "libref\/spec\/FIFOMapLemmas$.html", "name" : "libref.spec.FIFOMapLemmas"}, {"object" : "libref\/spec\/FIFOMapSpec$.html", "name" : "libref.spec.FIFOMapSpec"}, {"object" : "libref\/spec\/FunctionalArray$.html", "class" : "libref\/spec\/FunctionalArray.html", "name" : "libref.spec.FunctionalArray"}, {"object" : "libref\/spec\/FunctionalArrayLemmas$.html", "name" : "libref.spec.FunctionalArrayLemmas"}, {"object" : "libref\/spec\/Heap_List_BisimulationSpec$.html", "name" : "libref.spec.Heap_List_BisimulationSpec"}, {"class" : "libref\/spec\/HeapADT.html", "name" : "libref.spec.HeapADT"}, {"object" : "libref\/spec\/IMap$.html", "name" : "libref.spec.IMap"}, {"class" : "libref\/spec\/IntSet.html", "name" : "libref.spec.IntSet"}, {"class" : "libref\/spec\/Iterable.html", "name" : "libref.spec.Iterable"}, {"class" : "libref\/spec\/Iterator.html", "name" : "libref.spec.Iterator"}, {"object" : "libref\/spec\/LeftistHeap$.html", "name" : "libref.spec.LeftistHeap"}, {"object" : "libref\/spec\/LeftistHeapSpec$.html", "name" : "libref.spec.LeftistHeapSpec"}, {"object" : "libref\/spec\/LeftistHeapSpec0$.html", "name" : "libref.spec.LeftistHeapSpec0"}, {"case class" : "libref\/spec\/LinkedList.html", "name" : "libref.spec.LinkedList"}, {"object" : "libref\/spec\/LinkedListArrayListBisimulation$.html", "name" : "libref.spec.LinkedListArrayListBisimulation"}, {"object" : "libref\/spec\/LinkedListMapArrayListBisimulation$.html", "name" : "libref.spec.LinkedListMapArrayListBisimulation"}, {"class" : "libref\/spec\/ListADT.html", "name" : "libref.spec.ListADT"}, {"object" : "libref\/spec\/ListArray$.html", "case class" : "libref\/spec\/ListArray.html", "name" : "libref.spec.ListArray"}, {"object" : "libref\/spec\/ListArrayLemmas$.html", "name" : "libref.spec.ListArrayLemmas"}, {"case class" : "libref\/spec\/ListHeap.html", "name" : "libref.spec.ListHeap"}, {"case class" : "libref\/spec\/ListIterator.html", "name" : "libref.spec.ListIterator"}, {"object" : "libref\/spec\/ListQueue$.html", "case class" : "libref\/spec\/ListQueue.html", "name" : "libref.spec.ListQueue"}, {"object" : "libref\/spec\/ListQueueLemmas$.html", "name" : "libref.spec.ListQueueLemmas"}, {"object" : "libref\/spec\/ListSetLemmas$.html", "name" : "libref.spec.ListSetLemmas"}, {"object" : "libref\/spec\/ListSetOps$.html", "name" : "libref.spec.ListSetOps"}, {"object" : "libref\/spec\/ListStack$.html", "case class" : "libref\/spec\/ListStack.html", "name" : "libref.spec.ListStack"}, {"object" : "libref\/spec\/MapArray$.html", "case class" : "libref\/spec\/MapArray.html", "name" : "libref.spec.MapArray"}, {"object" : "libref\/spec\/MapArrayLemmas$.html", "name" : "libref.spec.MapArrayLemmas"}, {"case class" : "libref\/spec\/MapArrayList.html", "name" : "libref.spec.MapArrayList"}, {"object" : "libref\/spec\/PairMapLemmas$.html", "name" : "libref.spec.PairMapLemmas"}, {"object" : "libref\/spec\/PairMapSpec$.html", "name" : "libref.spec.PairMapSpec"}, {"object" : "libref\/spec\/PrimitiveDataTypeSpec$.html", "name" : "libref.spec.PrimitiveDataTypeSpec"}, {"object" : "libref\/spec\/RedBlackTree$.html", "name" : "libref.spec.RedBlackTree"}, {"object" : "libref\/spec\/SetAggregationProof$.html", "name" : "libref.spec.SetAggregationProof"}, {"object" : "libref\/spec\/SetMapLemmas$.html", "name" : "libref.spec.SetMapLemmas"}, {"object" : "libref\/spec\/SetMapSpec$.html", "name" : "libref.spec.SetMapSpec"}, {"case class" : "libref\/spec\/TreeSet.html", "name" : "libref.spec.TreeSet"}, {"case class" : "libref\/spec\/UpdatedArray.html", "name" : "libref.spec.UpdatedArray"}], "libref.proof.sugar" : [{"case class" : "libref\/proof\/sugar\/package$$LogicalOps.html", "name" : "libref.proof.sugar.LogicalOps"}], "leon.monads" : [], "leon.par" : [{"case class" : "leon\/par\/package$$Task.html", "name" : "leon.par.Task"}], "libref.proof" : [{"object" : "libref\/proof\/DeleteLemmas$.html", "name" : "libref.proof.DeleteLemmas"}, {"object" : "libref\/proof\/DeleteOps$.html", "name" : "libref.proof.DeleteOps"}, {"object" : "libref\/proof\/DistinctLemmas$.html", "name" : "libref.proof.DistinctLemmas"}, {"case class" : "libref\/proof\/DistinctList.html", "name" : "libref.proof.DistinctList"}, {"object" : "libref\/proof\/DistinctListOps$.html", "name" : "libref.proof.DistinctListOps"}, {"object" : "libref\/proof\/DistinctOps$.html", "name" : "libref.proof.DistinctOps"}, {"object" : "libref\/proof\/ListLemmas$.html", "name" : "libref.proof.ListLemmas"}, {"object" : "libref\/proof\/MinLemmas$.html", "name" : "libref.proof.MinLemmas"}, {"object" : "libref\/proof\/MinOps$.html", "name" : "libref.proof.MinOps"}, {"object" : "libref\/proof\/PairListLemmas$.html", "name" : "libref.proof.PairListLemmas"}, {"object" : "libref\/proof\/PermutationLemmas$.html", "name" : "libref.proof.PermutationLemmas"}, {"object" : "libref\/proof\/PermutationOps$.html", "name" : "libref.proof.PermutationOps"}, {"object" : "libref\/proof\/SetLemmas$.html", "name" : "libref.proof.SetLemmas"}, {"object" : "libref\/proof\/SortedListLemmas$.html", "name" : "libref.proof.SortedListLemmas"}, {"object" : "libref\/proof\/SortedListOps$.html", "name" : "libref.proof.SortedListOps"}, {"object" : "libref\/proof\/SortedListSpec$.html", "name" : "libref.proof.SortedListSpec"}, {"object" : "libref\/proof\/SortedListTakeLemmas$.html", "name" : "libref.proof.SortedListTakeLemmas"}, {"object" : "libref\/proof\/SortedListTakeOps$.html", "name" : "libref.proof.SortedListTakeOps"}, {"object" : "libref\/proof\/SortedListTakeSpec$.html", "name" : "libref.proof.SortedListTakeSpec"}], "libref.collection" : [{"object" : "libref\/collection\/$colon$colon$.html", "name" : "libref.collection.::"}, {"case class" : "libref\/collection\/Cons.html", "name" : "libref.collection.Cons"}, {"object" : "libref\/collection\/List$.html", "class" : "libref\/collection\/List.html", "name" : "libref.collection.List"}, {"object" : "libref\/collection\/ListOps$.html", "name" : "libref.collection.ListOps"}, {"case class" : "libref\/collection\/Nil.html", "name" : "libref.collection.Nil"}, {"case class" : "libref\/collection\/package$$SetOps.html", "name" : "libref.collection.SetOps"}]};